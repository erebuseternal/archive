# going to test characters here
from characters import *
def printImportant(string):
    string = '\033[93m' + string + '\033[0m'
    print(string)

# CREATE TABLE STATEMENT
printImportant('CREATE TABLE STATEMENT')
id = SchemaField('id', 'INTEGER', 'PRIMARY KEY')
value = SchemaField('value', 'VARCHAR')
name = SchemaField('name', 'VARCHAR')
constraint = SchemaConstraint('name_unique', 'UNIQUE(name)')

create_statement = Create()
create_statement.SetTableName('my_table')
create_statement.AddField(id)
create_statement.AddField(value)
create_statement.AddField(name)
create_statement.AddConstraint(constraint)
print(create_statement.Speak())

# UPSERT STATEMENT
printImportant('UPSERT STATEMENT')
upsert_statement = Upsert()
upsert_statement.SetTableName('my_table')
upsert_statement.AddField('id', 1)
upsert_statement.AddField('value', 'hello')
upsert_statement.AddField('name', 'world')
print(upsert_statement.Speak())

# SELECT STATEMENT
printImportant('SELECT STATEMENT 1')
id = QueryField()
id.SetField('id')
value = QueryField()
value.SetField('value', as_name=False)
value.SetName('the_value')
const = QueryField()
const.SetValue('"ok"')
const.SetName('const')
name = QueryField()
name.SetName('count')
name.SetFunction('COUNT', 'name')
table = QueryTable()
table.SetName('my_table')
table.SetAlias('M')
name.SetTable(table)
select_statement = Select()
select_statement.AddField(id)
select_statement.AddField(value)
select_statement.AddField(const)
select_statement.AddField(name)
select_statement.AddTable(table)
print(select_statement.Speak())
printImportant('SELECT STATEMENT 2')
condition1 = QueryCondition()
condition1.AddOperand(id)
condition1.AddOperand(value)
condition1.AddOperator('=')
select_statement.AddWhereCondition(condition1)
select_statement.AddWhereGroup()
select_statement.AddWhereCondition(condition1)
select_statement.ExitWhereGroup()
select_statement.AddWhereCondition(condition1, 'OR')
print(select_statement.Speak())
printImportant('SELECT STATEMENT 3')
order = QueryOrder()
order.SetField(name)
order.SetKeyword('DSC')
select_statement.AddOrderBy(order)
print(select_statement.Speak())

printImportant('DELETE STATEMENT')
delete_statement = Delete()
delete_statement.SetTableName('my_table')
delete_statement.AddWhereCondition(condition1)
print(delete_statement)
